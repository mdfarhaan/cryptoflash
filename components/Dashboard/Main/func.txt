  const setTable = (dataProcess) => {
    console.log("Table func object");
    [dataProcess].map((coinObj) => {
      var Holdings = 0; //current Coin holdings
      var Value = 0; //totalSpent
      [coinObj].forEach((coinDoc) => {
        console.log(coinDoc.coin);
        console.log("object");
        var coinDetails = coinData[coinDoc.coin];

        fetchPrice(coinDetails.symbol).then((price) => {
          if (coinDoc.transaction == "Buy") {
            Holdings = Holdings + coinDoc.quantity;
            Value = Value + coinDoc.totalSpent;
          } else {
            Holdings = Holdings - coinDoc.quantity;
            Value = Value - coinDoc.totalSpent;
          }
          if (Number(Holdings) === Holdings && Holdings % 1 === 0) {
            Holdings = parseInt(Holdings);
          } else {
            Holdings = parseFloat(Holdings.toFixed(4));
          }
          setTimeout(() => {
            // Update TableCoinData
            db.collection("table")
              .doc(user.uid)
              .collection(coinDoc.coin)
              .doc("TableCoinData")
              .set({
                name: coinDoc.coin,
                img: coinDetails.img,
                symbol: coinDetails.symbol,
                price: price, //current price
                day: 1.8, //API
                holdings: Holdings, // current holdings
                value: Holdings * price, //current value
                pandl: Holdings * price - Value, //coin profit
              });
          });
        }, 1000);
      });
    });
  };